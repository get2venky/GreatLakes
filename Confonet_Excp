#! python3
# Confonet2.py - To scrape data from confonet site


import sys
import selenium
import time
import datetime
from datetime import timedelta
import os

from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common import exceptions
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import StaleElementReferenceException
import openpyxl
from openpyxl import Workbook
from openpyxl.styles import Font
import pandas as pd
import csv


def scrape_action(year, current_state, current_district, current_cat):
##    try:

        print('Records exist for this combo of state+district+category')

        for j in range(1,175):
        
            table = driver.find_element_by_xpath('//*[@id="placeholder1"]/table/tbody')
            conf_list = []
            line = []
            i=0
            for row in table.find_elements_by_id("one"):
                #print('--------------------------------------New Row--------------------------------------------')
                #print(row.text)
                i= i+1
                if i==1:
                    #print('skipping this loop as it is the header')
                    pass
                else:
                    line = []
                    for col in row.find_elements_by_xpath('./td'):
                        line.append(col.text)
                    
                    line.append(year)
                    line.append(current_state)
                    line.append(current_district)
                    line.append(current_cat)
                    #print('The line is :')
                    #print(line)
                    conf_list.append(line)
                        #print('Row Done')
                    #del conf_list[0]

                    #print(conf_list)
##            wb = openpyxl.load_workbook(template_name)
##            page = wb.active
            #print('The CONF_LIST IS :')
            #print(conf_list)
##            for row in conf_list:
##                page.append(row)
##            wb.save(template_name)
                #print('Done for page no '+str(i))

            with open(template_name,'a') as csv_file:
                writer = csv.writer(csv_file, delimiter='|')
                for line in conf_list:
                    writer.writerow(line)
                        
            print('Done for page no '+str(j))
            print('Attempting to click the next if it exists')

            try:

               next_link = browser.find_element_by_link_text('Next')
               next_link.click()
               print('Successfully clicked next')
               #time.sleep(15)
               browser.implicitly_wait(20)

            except:
               print('Seems last page is reached...moving to the next combo')
               break
            print('End of loop with page no '+str(j+1))


##        return 1

##    except StaleElementReferenceException:
##        print('Stale Element Exception...exiting scrape_action function')
##        return 2   
##    except:
##        return 3




driver = webdriver.Chrome(executable_path='chromedriver')
driver.get('http://cms.nic.in/ncdrcusersWeb/search.do?method=loadSearchPub')


dtof = driver.find_element_by_id("dtof")
dtof.click()
startd="1/1/"
endd="31/12/"
sdate=driver.find_element_by_id("stDate")
edate=driver.find_element_by_id("endDate")
#year  logic
for year in range(2004,2019):

##    book = Workbook()
##    template_name = 'Confonet-'+str(year)+'.xlsx'
##    print('The generated name is '+template_name)
##    book.save(template_name)

    title_row = [['CaseNo','Complainant','Respondent','CompAdvocate','RespAdvocate','DOF','DOD','DOU','GetPDF','Year','State','District','Sector'],[]]

    template_name = 'confo_'+str(year)
    
    with open(template_name, "w") as csv_file:
            writer = csv.writer(csv_file, delimiter='|')
            for line in title_row:
                writer.writerow(line)
    #sys.exit()
            
##    wb = openpyxl.load_workbook(template_name)
##    page = wb.active
##    page.title = 'Template'
##    page.append(title_row)
##      
##    wb.save(template_name)




    sdate.clear()
    sdate.send_keys(startd+str(year))
    driver.implicitly_wait(100)

    edate=driver.find_element_by_id("endDate")
    edate.clear()
    edate.send_keys(endd+str(year))
    driver.implicitly_wait(100)

    driver.find_element_by_xpath('//*[@id="searchBy"]/option[8]').click()
    statelist=driver.find_element_by_xpath('//*[@id="stateId"]').click()


    state=Select(driver.find_element_by_id('stateId'))
    state_list = [o.text for o in state.options]


    print(state_list)

    cat=Select(driver.find_element_by_id('categoryId'))
    cat_list = [o.text for o in cat.options]
    cat_list = cat_list[1:]
    print(cat_list)

    #sys.exit()

    for current_state in state_list:
        print('The new state is : '+current_state)
        state.select_by_visible_text(current_state)
        time.sleep(5)
        district=Select(driver.find_element_by_id('districtId')) 
        dist_list = [o.text for o in district.options]
        print(dist_list)
        for current_district in dist_list:
            print('The new district is : '+current_district)
            district.select_by_visible_text(current_district)

            print('Before category loop')
            for current_cat in cat_list:
                try:
                    
                    print('The new category is :'+current_cat)
                    cat.select_by_visible_text(current_cat)
                    #print('After selecting category in dropdown')
                    #time.sleep(5)
                    time.sleep(3)

                    cat_opt=cat.first_selected_option
                    if (cat_opt.text == "Select"):
                        print('Selecting the category again...'+current_cat)
                        time.sleep(3)
                        cat.select_by_visible_text(current_cat)
                    
                    driver.find_element_by_id("searchbutton").click()
                    time.sleep(5)
                    #print("after clicking search")

                    search_count = 1
                    elem_id = "placeholder1"
                    try:
                          element = WebDriverWait(driver, 60).until(
                              EC.presence_of_element_located((By.ID, elem_id))
                          )

                    except:
                          print('Likely no records for this combo...placeholder1 not detected..')
                          search_count = 0
                          sys.exit()

                    if ("No Record(s) found" in driver.page_source):
                    #if search_count == 0 or ("No Record(s) found" in driver.page_source):
                        print('no records for this combo')
              
                    else:
                        print('Records exist for this combo of state+district+category...calling function')
                        #action_return = scrape_action(year, current_state, current_district, current_cat)
                        try:
                            
                                action_return = scrape_action(year, current_state, current_district, current_cat)
                                
                        except StaleElementReferenceException:
                            print('Stale Element Exception after scrape action call')
                            print('The error combo is : '+str(year)+'-'+current_state+'-'+current_district+'-'+current_cat)
                            print('continuing to the next category')
                        except NoSuchElementException:
                            print('No Such Element Exception after scrape action')
                            print('The error combo is : '+str(year)+'-'+current_state+'-'+current_district+'-'+current_cat)
                            print('continuing to the next category')
                        except:
                            print('General exception in the block...moving to the next loop')
                            print('The error combo is : '+str(year)+'-'+current_state+'-'+current_district+'-'+current_cat)
                            print('continuing to the next category')
                except StaleElementReferenceException:
                    print('Stale Element Exception in Category Loop')
                    print('The error combo is : '+str(year)+'-'+current_state+'-'+current_district+'-'+current_cat)
                    print('continuing to the next category')
                except NoSuchElementException:
                    print('No Such Element Exception in Category Loop')
                    print('The error combo is : '+str(year)+'-'+current_state+'-'+current_district+'-'+current_cat)
                    print('continuing to the next category')
                except:
                    print('General exception in Category Loop')
                    print('The error combo is : '+str(year)+'-'+current_state+'-'+current_district+'-'+current_cat)
                    print('continuing to the next category')




                    

